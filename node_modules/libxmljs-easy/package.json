{
  "author": {
    "name": "Vladimir Grichina",
    "email": "vgrichina@gmail.com",
    "url": "http://www.componentix.com"
  },
  "name": "libxmljs-easy",
  "description": "Work with libmxmljs DOM as with plain Javascript objects.",
  "version": "0.1.4",
  "homepage": "http://github.com/vgrichina/libxmljs-easy",
  "repository": {
    "type": "git",
    "url": "git@github.com:vgrichina/libxmljs-easy.git"
  },
  "engines": {
    "node": "~0.6.9"
  },
  "dependencies": {
    "libxmljs": ">=0.7.x",
    "node-proxy": "~0.6.0"
  },
  "devDependencies": {
    "mocha": "~0.11.0"
  },
  "main": "./main",
  "scripts": {
    "test": "mocha test.js",
    "prepublish": "docco main.js"
  },
  "readme": "libxmljs-easy\n=============\n\nlibxmljs-easy is a Node.js module which simplifies XML traversing,\nsimilar to [E4X](http://en.wikipedia.org/wiki/ECMAScript_for_XML).\n\n[![Build Status](https://secure.travis-ci.org/vgrichina/libxmljs-easy.png?branch=master)](http://travis-ci.org/vgrichina/libxmljs-easy)\n\nInstallation\n------------\n\n     npm install libxmljs-easy\n\nUsage\n-----\n\nUse module\n\n     var easy = require(\"libxmljs-easy\");\n\nParse XML\n\n     var xml = easy.parse('<books><book name=\"Lord of the Rings\">' +\n                             '<author name=\"J. R. R. Tolkien\" />' +\n                             '<language>English</language>' +\n                          '</book></books>');\n\n\nSelect elements from collections explicitly\n\n     assert.equal(xml.book[0].$name, \"Lord of the Rings\");\n     assert.equal(xml.book[0].author[0].$name, \"J. R. R. Tolkien\");\n\nUse shorthands (works well for case when there is single child element with given name)\n\n     assert.equal(xml.book.$name, \"Lord of the Rings\");\n     assert.equal(xml.book.author.$name, \"J. R. R. Tolkien\");\n\nBasically the idea is that you construct a path from tag names,\nwhich can optionally end with attribute name prefixed with \"$\".\n\nWhen index is ommited â€“ the array of elements is matched.\nWhen attribute is accessed on such array, its value is concatenated string\nof attribute values for each of elements in the array.\n\nThere is also original DOM element available as \"$\" property\nof individual converted elements.\n\n     assert.equal(xml.book.language[0].$.text(), \"English\");\n\nFurther info\n------------\n\n* [Annotated source with docs](http://vgrichina.github.com/libxmljs-easy/docs/main.html),\ngenerated using [Docco](http://jashkenas.github.com/docco/)\n* [Unit tests](https://github.com/vgrichina/libxmljs-easy/blob/master/test.js)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/vgrichina/libxmljs-easy/issues"
  },
  "_id": "libxmljs-easy@0.1.4",
  "dist": {
    "shasum": "7a92c03d7b4fd7b3e36252a877073d02a0bd9130"
  },
  "_from": "libxmljs-easy@",
  "_resolved": "https://registry.npmjs.org/libxmljs-easy/-/libxmljs-easy-0.1.4.tgz"
}
